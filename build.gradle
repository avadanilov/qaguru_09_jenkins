plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.13.9'
    junitVersion = '5.7.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testImplementation('com.codeborne:selenide:5.20.4')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('org.slf4j:slf4j-simple:1.7.30')
    testImplementation('com.github.javafaker:javafaker:1.0.2')
    testImplementation('org.aeonbits.owner:owner:1.0.12')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    println "[build.gradle]: " + System.getProperty("browser")
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    testCompile
}